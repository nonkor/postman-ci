{
	"info": {
		"_postman_id": "463e51c5-4c43-4d16-a6e0-784dea235666",
		"name": "garage",
		"description": "QAUTO TEST ENV",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "42901085"
	},
	"item": [
		{
			"name": "Validation tests for user registration \"Name\"",
			"item": [
				{
					"name": "Sing up Name is empty",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//Функція формування рандомного ім'я та прізвищща відповідно до вимог\r",
									"function generateRandomString(minLength, maxLength) {\r",
									"    const characters = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r",
									"    const length = Math.floor(Math.random() * (maxLength - minLength + 1)) + minLength;\r",
									"    \r",
									"    let result = \"\";\r",
									"    for (let i = 0; i < length; i++) {\r",
									"        result += characters[Math.floor(Math.random() * characters.length)];\r",
									"    }\r",
									"    return result;\r",
									"}\r",
									"\r",
									"const userLastName = generateRandomString(2, 20);\r",
									"const email = pm.variables.replaceIn(\"{{$randomEmail}}\"); \r",
									"\r",
									"pm.environment.set(\"userLastName\", userLastName);\r",
									"pm.environment.set(\"email\", email);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response contains correct error message for Name is empty\", () => {",
									"    let jsonData = pm.response.json(); ",
									"    ",
									"    pm.expect(jsonData).to.have.property(\"message\");",
									"    pm.expect(jsonData.message).to.eql('\"name\" is not allowed to be empty');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"\",\r\n  \"lastName\": \"{{userLastName}}\",\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\",\r\n  \"repeatPassword\": \"{{repeatPassword}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{qauto}}/auth/signup",
							"host": [
								"{{qauto}}"
							],
							"path": [
								"auth",
								"signup"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Sing up Name is too short",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//Функція формування рандомного ім'я та прізвищща відповідно до вимог\r",
									"function generateRandomString(minLength, maxLength) {\r",
									"    const characters = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r",
									"    const length = Math.floor(Math.random() * (maxLength - minLength + 1)) + minLength;\r",
									"    \r",
									"    let result = \"\";\r",
									"    for (let i = 0; i < length; i++) {\r",
									"        result += characters[Math.floor(Math.random() * characters.length)];\r",
									"    }\r",
									"    return result;\r",
									"}\r",
									"\r",
									"const userLastName = generateRandomString(2, 20);\r",
									"const email = pm.variables.replaceIn(\"{{$randomEmail}}\"); \r",
									"\r",
									"pm.environment.set(\"userLastName\", userLastName);\r",
									"pm.environment.set(\"email\", email);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response contains correct error message for Name is too short\", () => {",
									"    let jsonData = pm.response.json(); ",
									"    ",
									"    pm.expect(jsonData).to.have.property(\"message\");",
									"    pm.expect(jsonData.message).to.eql('Name has to be from 2 to 20 characters long');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"W\",\r\n  \"lastName\": \"{{userLastName}}\",\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\",\r\n  \"repeatPassword\": \"{{repeatPassword}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{qauto}}/auth/signup",
							"host": [
								"{{qauto}}"
							],
							"path": [
								"auth",
								"signup"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Sing up Name is too long",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//Функція формування рандомного ім'я та прізвищща відповідно до вимог\r",
									"function generateRandomString(minLength, maxLength) {\r",
									"    const characters = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r",
									"    const length = Math.floor(Math.random() * (maxLength - minLength + 1)) + minLength;\r",
									"    \r",
									"    let result = \"\";\r",
									"    for (let i = 0; i < length; i++) {\r",
									"        result += characters[Math.floor(Math.random() * characters.length)];\r",
									"    }\r",
									"    return result;\r",
									"}\r",
									"\r",
									"const userLastName = generateRandomString(2, 20);\r",
									"const email = pm.variables.replaceIn(\"{{$randomEmail}}\"); \r",
									"\r",
									"pm.environment.set(\"userLastName\", userLastName);\r",
									"pm.environment.set(\"email\", email);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response contains correct error message for Name is too long\", () => {",
									"    let jsonData = pm.response.json(); ",
									"    ",
									"    pm.expect(jsonData).to.have.property(\"message\");",
									"    pm.expect(jsonData.message).to.eql('Name has to be from 2 to 20 characters long');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Qwertyuiopasdfghjklzx\",\r\n  \"lastName\": \"{{userLastName}}\",\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\",\r\n  \"repeatPassword\": \"{{repeatPassword}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{qauto}}/auth/signup",
							"host": [
								"{{qauto}}"
							],
							"path": [
								"auth",
								"signup"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Sing up  Name contains non-English symbols",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//Функція формування рандомного ім'я та прізвищща відповідно до вимог\r",
									"function generateRandomString(minLength, maxLength) {\r",
									"    const characters = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r",
									"    const length = Math.floor(Math.random() * (maxLength - minLength + 1)) + minLength;\r",
									"    \r",
									"    let result = \"\";\r",
									"    for (let i = 0; i < length; i++) {\r",
									"        result += characters[Math.floor(Math.random() * characters.length)];\r",
									"    }\r",
									"    return result;\r",
									"}\r",
									"\r",
									"const userLastName = generateRandomString(2, 20);\r",
									"const email = pm.variables.replaceIn(\"{{$randomEmail}}\"); \r",
									"\r",
									"pm.environment.set(\"userLastName\", userLastName);\r",
									"pm.environment.set(\"email\", email);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response contains correct error message for Name contains non-English symbols\", () => {",
									"    let jsonData = pm.response.json(); ",
									"    ",
									"    pm.expect(jsonData).to.have.property(\"message\");",
									"    pm.expect(jsonData.message).to.eql('Name is invalid');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Алексей\",\r\n  \"lastName\": \"{{userLastName}}\",\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\",\r\n  \"repeatPassword\": \"{{repeatPassword}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{qauto}}/auth/signup",
							"host": [
								"{{qauto}}"
							],
							"path": [
								"auth",
								"signup"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Sing up Name contains non-alphabetic characters",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//Функція формування рандомного ім'я та прізвищща відповідно до вимог\r",
									"function generateRandomString(minLength, maxLength) {\r",
									"    const characters = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r",
									"    const length = Math.floor(Math.random() * (maxLength - minLength + 1)) + minLength;\r",
									"    \r",
									"    let result = \"\";\r",
									"    for (let i = 0; i < length; i++) {\r",
									"        result += characters[Math.floor(Math.random() * characters.length)];\r",
									"    }\r",
									"    return result;\r",
									"}\r",
									"\r",
									"const userLastName = generateRandomString(2, 20);\r",
									"const email = pm.variables.replaceIn(\"{{$randomEmail}}\"); \r",
									"\r",
									"pm.environment.set(\"userLastName\", userLastName);\r",
									"pm.environment.set(\"email\", email);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Response contains correct error message for Name contains non-alphabetic characters\", () => {",
									"    let jsonData = pm.response.json(); ",
									"    ",
									"    pm.expect(jsonData).to.have.property(\"message\");",
									"    pm.expect(jsonData.message).to.eql('Name is invalid');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Alex9999!&\",\r\n  \"lastName\": \"{{userLastName}}\",\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\",\r\n  \"repeatPassword\": \"{{repeatPassword}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{qauto}}/auth/signup",
							"host": [
								"{{qauto}}"
							],
							"path": [
								"auth",
								"signup"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				}
			]
		},
		{
			"name": "Sing up",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"//Функція формування рандомного ім'я та прізвищща відповідно до вимог\r",
							"function generateRandomString(minLength, maxLength) {\r",
							"    const characters = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r",
							"    const length = Math.floor(Math.random() * (maxLength - minLength + 1)) + minLength;\r",
							"    \r",
							"    let result = \"\";\r",
							"    for (let i = 0; i < length; i++) {\r",
							"        result += characters[Math.floor(Math.random() * characters.length)];\r",
							"    }\r",
							"    return result;\r",
							"}\r",
							"\r",
							"const username = generateRandomString(2, 20);\r",
							"const userLastName = generateRandomString(2, 20);\r",
							"const email = pm.variables.replaceIn(\"{{$randomEmail}}\"); \r",
							"\r",
							"pm.environment.set(\"userName\", username);\r",
							"pm.environment.set(\"userLastName\", userLastName);\r",
							"pm.environment.set(\"email\", email);\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", () => {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"{{userName}}\",\r\n  \"lastName\": \"{{userLastName}}\",\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\",\r\n  \"repeatPassword\": \"{{repeatPassword}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{qauto}}/auth/signup",
					"host": [
						"{{qauto}}"
					],
					"path": [
						"auth",
						"signup"
					]
				},
				"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
			},
			"response": [
				{
					"name": "Sing up 201 created",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"VzlsuiDgNdimgvE\",\r\n    \"lastName\": \"ubGqAKf\",\r\n    \"email\": \"Laura67@hotmail.com\",\r\n    \"password\": \"Qwerty1978\",\r\n    \"repeatPassword\": \"Qwerty1978\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{qauto}}/auth/signup",
							"host": [
								"{{qauto}}"
							],
							"path": [
								"auth",
								"signup"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Server",
							"value": "nginx/1.18.0 (Ubuntu)"
						},
						{
							"key": "Date",
							"value": "Mon, 17 Mar 2025 14:24:05 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "113"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Vary",
							"value": "Origin"
						},
						{
							"key": "Access-Control-Allow-Credentials",
							"value": "true"
						},
						{
							"key": "ETag",
							"value": "W/\"71-kHZT9ebmQCnXiDgjYw0yAs5H41U\""
						},
						{
							"key": "Set-Cookie",
							"value": "sid=s%3ARDl6l89sHEyl4cqVgyO2JXIZmJ6qfr9_.dmJezbMbT7nAb%2BfPalXoC%2Bk8QuhxOQTasV6Ud5ULlyo; Domain=.forstudy.space; Path=/; Expires=Tue, 18 Mar 2025 14:24:05 GMT"
						}
					],
					"cookie": [],
					"body": "{\n    \"status\": \"ok\",\n    \"data\": {\n        \"userId\": 199416,\n        \"photoFilename\": \"default-user.png\",\n        \"distanceUnits\": \"km\",\n        \"currency\": \"usd\"\n    }\n}"
				},
				{
					"name": "Sing up 400",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"VzlsuiDgNdimgvE\",\r\n    \"lastName\": \"ubGqAKf\",\r\n    \"email\": \"Laura67@hotmail.com\",\r\n    \"password\": \"Qwerty00000\",\r\n    \"repeatPassword\": \"Qwerty11111\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{qauto}}/auth/signup",
							"host": [
								"{{qauto}}"
							],
							"path": [
								"auth",
								"signup"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Server",
							"value": "nginx/1.18.0 (Ubuntu)"
						},
						{
							"key": "Date",
							"value": "Mon, 17 Mar 2025 14:24:05 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "113"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Vary",
							"value": "Origin"
						},
						{
							"key": "Access-Control-Allow-Credentials",
							"value": "true"
						},
						{
							"key": "ETag",
							"value": "W/\"71-kHZT9ebmQCnXiDgjYw0yAs5H41U\""
						},
						{
							"key": "Set-Cookie",
							"value": "sid=s%3ARDl6l89sHEyl4cqVgyO2JXIZmJ6qfr9_.dmJezbMbT7nAb%2BfPalXoC%2Bk8QuhxOQTasV6Ud5ULlyo; Domain=.forstudy.space; Path=/; Expires=Tue, 18 Mar 2025 14:24:05 GMT"
						}
					],
					"cookie": [],
					"body": "{\n    \"status\": \"error\",\n    \"message\": \"Passwords do not match\"\n}"
				}
			]
		},
		{
			"name": "Update profile",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"if (pm.response.code === 200) {",
							"    let userName = pm.environment.get(\"userName\");",
							"    let userLastName = pm.environment.get(\"userLastName\");",
							"    ",
							"    pm.environment.set(\"userName\", userName);",
							"    pm.environment.set(\"userLastName\", userLastName);",
							"   ",
							"}",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"//Функція формування рандомного ім'я та прізвищща відповідно до вимог\r",
							"function generateRandomString(minLength, maxLength) {\r",
							"    const characters = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r",
							"    const length = Math.floor(Math.random() * (maxLength - minLength + 1)) + minLength;\r",
							"    \r",
							"    let result = \"\";\r",
							"    for (let i = 0; i < length; i++) {\r",
							"        result += characters[Math.floor(Math.random() * characters.length)];\r",
							"    }\r",
							"    return result;\r",
							"}\r",
							"\r",
							"const username = generateRandomString(2, 20);\r",
							"const userLastName = generateRandomString(2, 20);\r",
							"\r",
							"pm.environment.set(\"userName\", username);\r",
							"pm.environment.set(\"userLastName\", userLastName);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"{{userName}}\",\r\n  \"lastName\": \"{{userLastName}}\",\r\n  \"dateBirth\": \"$randomDatePast\",\r\n  \"country\": \"Ukraine\",\r\n  \"photo\": \"\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{qauto}}/users/profile",
					"host": [
						"{{qauto}}"
					],
					"path": [
						"users",
						"profile"
					]
				},
				"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
			},
			"response": []
		},
		{
			"name": "Update password",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {",
							"    pm.response.to.have.status(200);",
							"});",
							"if (pm.response.code === 200) {",
							"    let requestData = pm.request.body;",
							"    let parsedRequest = JSON.parse(requestData);",
							"    let newPassword = parsedRequest.password;",
							"    ",
							"    pm.environment.set(\"password\", newPassword);",
							"}",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"oldPassword\": \"{{password}}\",\r\n  \"password\": \"Qwerty2005\",\r\n  \"repeatPassword\": \"Qwerty2005\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{qauto}}/users/password",
					"host": [
						"{{qauto}}"
					],
					"path": [
						"users",
						"password"
					]
				},
				"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
			},
			"response": []
		},
		{
			"name": "Logout",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{qauto}}/auth/logout",
					"host": [
						"{{qauto}}"
					],
					"path": [
						"auth",
						"logout"
					]
				},
				"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
			},
			"response": []
		},
		{
			"name": "Sing in",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\",\r\n  \"remember\": false\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{qauto}}/auth/signin",
					"host": [
						"{{qauto}}"
					],
					"path": [
						"auth",
						"signin"
					]
				},
				"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
			},
			"response": []
		},
		{
			"name": "Create new car",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", () => {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"if (pm.response.code === 201) {",
							"    let responseData = pm.response.json(); ",
							"    let carId = responseData.data.id; ",
							"    ",
							"    pm.environment.set(\"carId\", carId);",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"carBrandId\": 1,\r\n  \"carModelId\": 5,\r\n  \"mileage\": 151\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{qauto}}/cars",
					"host": [
						"{{qauto}}"
					],
					"path": [
						"cars"
					]
				},
				"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
			},
			"response": []
		},
		{
			"name": "Add expenses",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const dateNow = new Date();\r",
							"const currentDate = dateNow.toISOString().split('T')[0];\r",
							"\r",
							"pm.environment.set(\"currentDate\", currentDate);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"carId\": {{carId}},\r\n  \"reportedAt\": \"{{currentDate}}\",\r\n  \"mileage\": 200,\r\n  \"liters\": 11,\r\n  \"totalCost\": 700,\r\n  \"forceMileage\": false\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{qauto}}/expenses",
					"host": [
						"{{qauto}}"
					],
					"path": [
						"expenses"
					]
				},
				"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
			},
			"response": []
		},
		{
			"name": "Delete user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.environment.set(\"userName\", \"\");",
							"pm.environment.set(\"userLastName\", \"\");",
							"pm.environment.set(\"email\", \"\");",
							"pm.environment.set(\"password\", \"Qwerty1978\");",
							"pm.environment.set(\"carId\", \"\"); ",
							"pm.environment.set(\"currentDate\", \"\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{qauto}}/users",
					"host": [
						"{{qauto}}"
					],
					"path": [
						"users"
					]
				},
				"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}